{"version":3,"sources":["components/PlantForm.js","components/utility/Togglable.js","components/market_prices/PriceForm.js","components/market_prices/PlantPriceDisplay.js","services/prices.js","services/location.js","components/market_prices/Plant.js","components/market_prices/PlantDisplay.js","assets/emissions.png","assets/volume_food.png","components/static/ClimateTalk.js","components/static/Header.js","components/utility/Notification.js","components/market_statistics/LocationDisplay.js","assets/emission_calc.png","components/market_statistics/EnvironDisplay.js","services/statistic.js","components/market_statistics/StatsDisplay.js","services/plants.js","App.js","index.js"],"names":["PlantForm","createPlant","useState","newName","setNewName","newWeeks","setNewWeeks","onSubmit","event","preventDefault","name","weeksToHarvest","value","onChange","target","type","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","children","closeLabel","PriceForm","sendOffer","newPrice","setNewPrice","offerType","setOfferType","price","String","PlantPriceDisplay","priceChartData","chart","labels","datasets","label","data","bid_data","backgroundColor","ask_data","baseUrl","getPrice","id","a","axios","get","response","getChart","sendPrice","priceOffer","put","getLocations","sendLocation","plantId","payload","city","state","plant","post","Plant","notifyUser","setPriceChartData","refreshPriceChart","priceService","priceData","then","useEffect","priceObject","priceFormRef","current","Number","locationService","sale_success","sale_happen","result","console","log","useRef","PlantDisplay","plants","map","makePlants","ClimateTalk","src","EmissionImage","width","href","FoodVolume","Header","Notification","message","notifStyle","color","background","fontSize","borderStyle","borderRadius","padding","LocDisplay","locations","loc_arr","loc","push","makeLocations","EnvironDisplay","totalSales","EmissionCalc","getStats","StatsDisplay","stats","setStats","setLocations","refreshAll","statService","statsData","locationData","totalAsks","totalBids","colspan","getAll","create","newPlant","App","setPlants","notifMessage","setNotifMessage","notifType","setNotifType","plantService","initialPlants","plantObject","plantFormRef","savedPlant","concat","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c572030a.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst PlantForm = ({ createPlant }) => {\n    const [newName, setNewName] = useState('')\n    const [newWeeks, setNewWeeks] = useState('')\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleWeeksChange = (event) => {\n        setNewWeeks(event.target.value)\n    }\n\n    const addPlant = (event) => {\n        event.preventDefault()\n        createPlant({\n            name: newName,\n            weeksToHarvest: newWeeks,\n        })\n\n        setNewName('')\n        setNewWeeks('')\n    }\n\n    return (\n        <div>\n            <h2>Enter a new Plant</h2>\n\n            <form onSubmit={addPlant}>\n                <div>Plant Name: \n                    <input\n                        value={newName}\n                        onChange={handleNameChange}\n                    />\n                </div>\n                <div># of Weeks until Harvest:                     \n                    <input\n                        type='number'\n                        value={newWeeks}\n                        onChange={handleWeeksChange}\n                    />\n                </div>\n                <button type='submit'>Save</button>\n            </form>\n        </div>\n    )\n}\n\nexport default PlantForm","import React, { useState, useImperativeHandle } from 'react'\n\nconst Togglable = React.forwardRef((props, ref) => {\n    const [visible, setVisible] = useState(false)\n\n    const hideWhenVisible = { display: visible ? 'none' : '' }\n    const showWhenVisible = { display: visible ? '' : 'none' }\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n\n    useImperativeHandle(ref, () => {\n        // make toggle available outside component\n        return {\n            toggleVisibility\n        }\n    })\n\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n            </div>\n            <div style={showWhenVisible}>\n                {props.children}\n                <button onClick={toggleVisibility}>{props.closeLabel}</button>\n            </div>\n        </div>\n    )\n})\n\nexport default Togglable","import React, { useState } from 'react'\n\nconst PriceForm = ({ sendOffer }) => {\n    const [newPrice, setNewPrice] = useState('')\n    const [offerType, setOfferType] = useState('bids')\n\n    const handlePriceChange = (event) => {\n        setNewPrice(event.target.value)\n    }\n\n    const handleTypeChange = (event) => {\n        setOfferType(event.target.value)\n    }\n\n    const sendPrice = (event) => {\n        event.preventDefault()\n        sendOffer({\n            type: offerType,\n            price: String(newPrice)\n        })\n\n        setNewPrice('')\n        setOfferType('bids')\n    }\n\n    return (\n        <form onSubmit={sendPrice}>\n            <select\n                value={offerType}\n                onChange={handleTypeChange}\n            >\n                <option value='bids'>Bid</option>\n                <option value='asks'>Ask</option>\n            </select>\n            <br/>\n            Price in cents/oz in 5c increments\n                <input\n                    type='number'\n                    value={newPrice}\n                    onChange={handlePriceChange}\n                />\n            <br/>\n            <button type='submit'>Send</button>\n        </form>\n    )\n}\n\nexport default PriceForm","import React from 'react'\nimport { Bar } from 'react-chartjs-2'\n\nconst PlantPriceDisplay = ({ priceChartData }) => {\n    const chart = {\n        labels: priceChartData.labels,\n        datasets: [{\n            label: 'Bids',\n            data: priceChartData.bid_data,\n            backgroundColor: 'rgb(34,139,34)'\n        }, {\n            label: 'Asks',\n            data: priceChartData.ask_data,\n            backgroundColor: 'rgb(220,20,60)'\n        }]\n    }\n\n    return (\n        <div>\n            <Bar data={chart}/>\n        </div>\n    )\n}\n\nexport default PlantPriceDisplay","import axios from 'axios'\nconst baseUrl = '/api/prices'\n\nconst getPrice = async (id) => {\n    const response = await axios.get(`${baseUrl}/${id}`)\n    return response.data\n}\n\nconst getChart = async (id) => {\n    const response = await axios.get(`${baseUrl}/chart/${id}`)\n    return response.data\n}\n\nconst sendPrice = async (id, priceOffer) => {\n    const response = await axios.put(`${baseUrl}/${id}`, priceOffer)\n    return response.data\n}\n\nexport default {\n    getPrice, sendPrice, getChart\n}","import axios from 'axios'\nconst baseUrl = '/api/location'\n\nconst getLocations = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data\n}\n\nconst sendLocation = async (plantId) => {\n    const response = await axios.get('https://geolocation-db.com/json/')\n    const payload = {\n        city: response.data.city,\n        state: response.data.state,\n        plant: plantId,\n    }\n    await axios.post(baseUrl, payload)\n}\n\nexport default {\n    getLocations, sendLocation\n}","import React, { useState, useEffect, useRef } from 'react'\nimport Togglable from '../utility/Togglable'\nimport PriceForm from './PriceForm'\nimport PlantPriceDisplay from './PlantPriceDisplay'\n\nimport priceService from '../../services/prices'\nimport locationService from '../../services/location'\n\nconst Plant = ({ plant, notifyUser }) => {\n    const [priceChartData, setPriceChartData] = useState([])\n\n    const refreshPriceChart = () => {\n        priceService\n            .getChart(plant.priceData)\n            .then(priceChartData => {\n                setPriceChartData(priceChartData)\n            })\n    }\n\n    useEffect(() => {\n        refreshPriceChart()\n    }, [])\n\n    const sendOffer = async (priceObject) => {\n        priceFormRef.current.toggleVisibility()     // close bid/ask form\n\n        // check price is mult of 5\n        let test_price = Number(priceObject.price)\n        if (test_price % 5 !== 0){\n            notifyUser('Please submit an offer in increment of 5 cents', 'red')\n            return\n        }\n        \n        locationService.sendLocation(plant.id)      // log location of client\n        try {\n            const sale_success = await priceService.sendPrice(plant.priceData, priceObject)\n            if (sale_success.sale_happen.result){\n                notifyUser(`successful sale @ ${sale_success.sale_happen.price} c/oz of ${plant.name}`, 'green')\n            } else {\n                notifyUser(`${priceObject.type} successful @ ${priceObject.price} c/oz of ${plant.name}`, 'green')\n            }\n            refreshPriceChart()\n        } catch (exception){\n            console.log(exception);\n        }\n    }\n\n    const priceFormRef = useRef()\n\n    return (\n        <tr>\n            <th>{plant.name}</th>\n            <td><PlantPriceDisplay priceChartData={priceChartData}/></td>\n            <td>\n                <Togglable buttonLabel='Send Bid/Ask' closeLabel='Cancel' ref={priceFormRef}>\n                    <PriceForm sendOffer={sendOffer}/>\n                </Togglable>\n            </td>\n        </tr>\n    )\n}\n\nexport default Plant","import React from 'react'\nimport Plant from './Plant'\n\nconst PlantDisplay = ({ plants, notifyUser }) => {\n\n    const makePlants = (plants) => {\n        return plants.map(plant => {\n            return <Plant plant={plant} notifyUser={notifyUser}/>\n        })\n    }\n\n    return (\n        <div>\n            <h2>Produce Market Prices</h2>\n            <table>\n                {makePlants(plants)}\n            </table>\n        </div>\n    )\n}\n\nexport default PlantDisplay","export default __webpack_public_path__ + \"static/media/emissions.ba609137.png\";","export default __webpack_public_path__ + \"static/media/volume_food.6f41ea90.png\";","import React from 'react'\nimport Togglable from '../utility/Togglable'\nimport EmissionImage from '../../assets/emissions.png'\nimport FoodVolume from '../../assets/volume_food.png'\n\nconst ClimateTalk = (props) => {\n    return (\n        <div>\n            <h1>Why is Agriculture Reform Important for Humanity?</h1>\n            <Togglable buttonLabel='Click Here to Find Out More' closeLabel='Close'>\n                <h2>The Emissions Associated with Agriculture</h2>\n                <img src={EmissionImage} style={{width:'400px'}}/>\n                <h3>10% of US Emissions is due to Agriculture</h3>\n                <p>\"The US food system as a whole is responsible for the emissions of approximately 2.6 tCO2e per person per year [35]. By our calculations, this accounts for roughly 10% of overall US GHG emissions [35, 36]. Fresh produce accounts for roughly one-tenth of food-related GHG emissions, or approximately 1% of overall US GHG emissions [35]. While 1% of US GHG emissions may not seem like much, the United States emits roughly 20% of the world's greenhouse gases, despite having only 5% of the world's population. With global population growth and increasing preference for the consumer patterns of wealthier nations, food-related emissions—in particular, emissions associated with specialty commodities such as fresh produce—are likely to increase.\"</p>\n                <p>Source:\n                    <br />\n                    <a href='https://iopscience.iop.org/article/10.1088/1748-9326/ab6c2f'>Scientific Paper</a>\n                </p>\n                <br/>\n                <h2>The Food Wastage</h2>\n                <h3>30% of global food production is wasted</h3>\n                <p>\"The United Nations’ Food and Agriculture Organization estimates that, with over 30% of global food production ending up as food waste, it is $2.6 trillion dollar issue.... According to ReFED, a nonprofit committed to reducing US food waste, over 80% of food waste occurs at food service and retail locations as well as consumers’ homes so, the quicker food gets to its destination, the less likely it will have to be thrown away.\"</p>\n                <p>Source:\n                    <br />\n                    <a href='https://indooragtechnyc.com/is-agriculture-the-next-area-to-experience-decentralization/'>Eco Investor Op-ed</a>\n                </p>\n                <h3>Total Vood Volume</h3>\n                <img src={FoodVolume} style={{width:'400px'}}/>\n                <p>Source:\n                    <br />\n                    <a href='https://css.umich.edu/factsheets/us-food-system-factsheet'>Source for Total Volume of Food</a>\n                </p>\n            </Togglable>\n        </div>\n    )\n}\n\nexport default ClimateTalk","import React from 'react'\n\nconst Header = (props) => {\n    return (\n        <div>\n            <h1>LettuceSwap</h1>\n            <h2>A Localized Produce Market</h2>\n            <h3>Promote Food Security, Reduce Waste and Emissions, Improve Nutrition and Taste</h3>\n            <p>As Hydroponic vertical gardens become accessible, a decentralized agricultural paradigm becomes possible. In addition to the actual cultivating technology, an accompanying decentralized market is integral to the\n                sustained success and longevity of a new agricultural system. Allowing people to easily sell their own grown produce helps to financially incentivize food independence, improve people's access to healthy foods,\n                reduce food wastage through market efficiency, and help reduce transportation distance for produce.\n            </p>\n        </div>\n    )\n}\n\nexport default Header","import React from 'react'\n\nconst Notification = ({ message, type }) => {\n\n    const notifStyle = {\n        color: type,\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10\n    }\n\n    if (message === null){      // if no message, nonexistant\n        return null\n    }\n\n    return (\n        <div style={notifStyle}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\nconst LocDisplay = ({ locations }) => {\n\n    const makeLocations = () => {\n        let loc_arr = []\n        for (let loc in locations) {\n            loc_arr.push(<li>{locations[loc]} bid/asks in {loc}</li>)\n        }\n        return loc_arr\n    }\n\n    return (\n        <ul>\n            <h3>Is Your Community Ready?</h3>\n            <p>Check out which places are trading produce!</p>\n            {makeLocations()}\n        </ul>\n    )\n}\n\nexport default LocDisplay","export default __webpack_public_path__ + \"static/media/emission_calc.64bc74a2.png\";","import React from 'react'\nimport Togglable from '../utility/Togglable'\n\nimport EmissionCalc from '../../assets/emission_calc.png'\n\nconst EnvironDisplay = ({ totalSales }) => {\n\n    return (\n        <p>\n            <h3>Estimate on Emissions Saved</h3>\n            <Togglable buttonLabel='Learn About This Calculation' closeLabel='Close'>\n                <p>Calculation done with rough estimates of 2.6 tCO2e <br/> of emissions per person\n                per year for the food system, <br/> producing 355,880 million pounds a year</p>\n                <br/>\n                <img src={EmissionCalc} style={{width:'200px'}}/>\n                <p>((emissions * us population) / total produce) / oz in pound</p>\n                <p>Roughly 150 mCO2e per ounce of food</p>\n            </Togglable>\n            <p style={{fontSize:'20px'}}>{totalSales * 150} mCO2e Emissions Saved</p>\n        </p>\n    )\n}\n\nexport default EnvironDisplay","import axios from 'axios'\nconst baseUrl = '/api/statistic'\n\nconst getStats = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data[0]\n}\n\nexport default {\n    getStats\n}","import React, { useState, useEffect } from 'react'\nimport LocDisplay from './LocationDisplay'\nimport EnvironDisplay from './EnvironDisplay'\n\nimport statService from '../../services/statistic'\nimport locationService from '../../services/location'\n\nconst StatsDisplay = () => {\n    const [stats, setStats] = useState([])\n    const [locations, setLocations] = useState([])\n\n    const refreshStats = () => {\n        statService\n            .getStats()\n            .then(statsData => {\n                setStats(statsData)\n            })\n    }\n\n    const getLocations = () => {\n        locationService\n            .getLocations()\n            .then(locationData => {\n                setLocations(locationData)\n            })\n    }\n\n    const refreshAll = () => {\n        refreshStats()\n        getLocations()\n    }\n\n    useEffect(() => {\n        refreshAll()\n    }, [])\n\n    return (\n        <div>\n            <h2>Market Statistics</h2>\n            <table>\n                <tr>\n                    <th>Total Sales:</th>\n                    <td>{stats.totalSales}</td>\n                </tr>\n                <tr>\n                    <th>Total Asks:</th>\n                    <td>{stats.totalAsks}</td>\n                </tr>\n                <tr>\n                    <th>Total Bids:</th>\n                    <td>{stats.totalBids}</td>\n                </tr>\n                <tr>\n                    <td colspan=\"2\">\n                        <EnvironDisplay totalSales={stats.totalSales}/>\n                    </td>\n                </tr>\n                <tr>\n                    <td colspan=\"2\">\n                        <LocDisplay locations={locations}/>\n                    </td>\n                </tr>\n            </table>\n            <br/>\n            <button onClick={refreshAll}>Refresh Stats</button>\n        </div>\n    )\n}\n\n\nexport default StatsDisplay","import axios from 'axios'\nconst baseUrl = '/api/plants'\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data\n}\n\nconst create = async newPlant => {\n    const response = await axios.post(baseUrl, newPlant)\n    return response.data\n}\n\nexport default {\n    getAll, create\n}","import React, { useState, useEffect, useRef } from 'react'\nimport PlantForm from './components/PlantForm'\nimport Togglable from './components/utility/Togglable'\nimport PlantDisplay from './components/market_prices/PlantDisplay'\nimport ClimateTalk from './components/static/ClimateTalk'\nimport Header from './components/static/Header'\nimport Notification from './components/utility/Notification'\nimport StatsDisplay from './components/market_statistics/StatsDisplay'\n\nimport plantService from './services/plants'\n\n\nconst App = () => {\n  const [plants, setPlants] = useState([])\n  const [ notifMessage, setNotifMessage ] = useState(null)\n  const [ notifType, setNotifType ] = useState('')\n\n  // populate on load\n  useEffect(() => {\n    plantService\n      .getAll()\n      .then(initialPlants => {\n        setPlants(initialPlants)\n      })\n  }, [])\n\n  const createPlant = async (plantObject) => {\n    plantFormRef.current.toggleVisibility()\n    try {\n      const savedPlant = await plantService.create(plantObject)\n      setPlants(plants.concat(savedPlant))\n    } catch (exception){\n      console.log(exception);\n    }\n  }\n\n  const notifyUser = (message, type) => {\n    setNotifMessage(message)\n    setNotifType(type)\n    setTimeout(() => {\n        setNotifMessage(null)\n    }, 7000)\n}\n\n  const plantFormRef = useRef()  \n\n  return (\n    <div>\n      <Header/>\n      <br/>\n      <Notification message={notifMessage} type={notifType}/>\n      <div>\n        <PlantDisplay plants={plants} notifyUser={notifyUser}/>\n        <br/>\n        <Togglable buttonLabel='New Plant' closeLabel='Cancel' ref={plantFormRef}>\n          <PlantForm createPlant={createPlant}/>\n        </Togglable>\n        <br/>\n        <StatsDisplay/>\n        <br/>\n      </div>\n      <br/>\n      <ClimateTalk/>\n    </div>\n  )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}